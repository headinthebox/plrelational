//
// Copyright (c) 2016 Plausible Labs Cooperative, Inc.
// All rights reserved.
//

class QueryOptimizer {
    var nodes: [QueryPlanner.Node]
    
    init(nodes: [QueryPlanner.Node]) {
        self.nodes = nodes
        
        optimize()
    }
    
    func optimize() {
        for i in nodes.indices {
            switch nodes[i].op {
                
            case .Union where nodes[i].childCount == 1:
                // Unions with a single child (generated by Relation changes) can be eliminated and
                // the child pointed straight at the union's parents.
                let childIndex = nodes[i].childIndexes[0]
                nodes[childIndex].parentIndexes = nodes[i].parentIndexes
                for parentIndex in nodes[i].parentIndexes {
                    nodes[parentIndex].childIndexes.replace(i, with: childIndex)
                }
                nodes[i].parentIndexes = []
            default:
                break
            }
        }
    }
}
